{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { currencyListReducer } from \"./reducers/currencyReducers\";\nimport { userRegisterReducer } from \"./reducers/userReducers\";\nvar middleware = [thunk];\nvar userInfoFromStorage = JSON.parse(localStorage.getItem(\"userInfo\"));\nvar initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nvar reducer = combineReducers({\n  currencyList: currencyListReducer,\n  userRegister: userRegisterReducer\n});\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"sources":["D:/react native/crypto_currency/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","currencyListReducer","userRegisterReducer","middleware","userInfoFromStorage","JSON","parse","localStorage","getItem","initialState","userLogin","userInfo","reducer","currencyList","userRegister","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,mBAAT;AACA,SAASC,mBAAT;AAEA,IAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AAEA,IAAMK,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAEP;AADD;AADQ,CAArB;AAKA,IAAMQ,OAAO,GAAGf,eAAe,CAAC;AAC9BgB,EAAAA,YAAY,EAAEZ,mBADgB;AAE9Ba,EAAAA,YAAY,EAAEZ;AAFgB,CAAD,CAA/B;AAKA,IAAMa,KAAK,GAAGnB,WAAW,CACvBgB,OADuB,EAEvBH,YAFuB,EAGvBT,mBAAmB,CAACF,eAAe,MAAf,SAAmBK,UAAnB,CAAD,CAHI,CAAzB;AAMA,eAAeY,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { currencyListReducer } from \"./reducers/currencyReducers\";\r\nimport { userRegisterReducer } from \"./reducers/userReducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst userInfoFromStorage = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n\r\nconst initialState = {\r\n  userLogin: {\r\n    userInfo: userInfoFromStorage,\r\n  },\r\n};\r\nconst reducer = combineReducers({\r\n  currencyList: currencyListReducer,\r\n  userRegister: userRegisterReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}