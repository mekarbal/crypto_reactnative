{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\react native\\\\crypto_currency\\\\components\\\\SingleCurrency.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nvar SingleCurrency = function SingleCurrency(props) {\n  var id = props.route.params.id;\n  console.log(id);\n  var result = [];\n  var nowHour = new Date().getHours();\n\n  for (var i = nowHour; i <= 24; i++) {\n    if (i > 12) {\n      result.push(i + \"PM\");\n    } else {\n      result.push(i + \"AM\");\n    }\n  }\n\n  var dispatch = useDispatch();\n  var currencyDetails = useSelector(function (state) {\n    return state.currencyDetails;\n  });\n  var loading = currencyDetails.loading,\n      currency = currencyDetails.currency,\n      error = currencyDetails.error;\n  useEffect(function () {\n    dispatch(currencyDetails(match.params.id));\n  }, [dispatch, match]);\n  return React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Bezier Line Chart\"), React.createElement(LineChart, {\n    data: {\n      labels: result,\n      datasets: [{\n        data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n      }]\n    },\n    width: Dimensions.get(\"window\").width - 35,\n    height: 300,\n    yAxisLabel: \"$\",\n    yAxisSuffix: \"k\",\n    yAxisInterval: 1,\n    chartConfig: {\n      backgroundColor: \"#e26a00\",\n      backgroundGradientFrom: \"#003f5c\",\n      backgroundGradientTo: \"#003f5c\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \".5\",\n        stroke: \"#ffa726\"\n      }\n    },\n    bezier: true,\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SingleCurrency;","map":{"version":3,"sources":["D:/react native/crypto_currency/components/SingleCurrency.js"],"names":["React","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","useDispatch","useSelector","SingleCurrency","props","id","route","params","console","log","result","nowHour","Date","getHours","i","push","dispatch","currencyDetails","state","loading","currency","error","useEffect","match","alignItems","labels","datasets","data","Math","random","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","marginVertical"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, Dimensions } from \"react-native\";\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart,\r\n} from \"react-native-chart-kit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst SingleCurrency = (props) => {\r\n  const { id } = props.route.params;\r\n  console.log(id);\r\n  var result = [];\r\n  var nowHour = new Date().getHours();\r\n\r\n  for (var i = nowHour; i <= 24; i++) {\r\n    if (i > 12) {\r\n      result.push(i + \"PM\");\r\n    } else {\r\n      result.push(i + \"AM\");\r\n    }\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const currencyDetails = useSelector((state) => state.currencyDetails);\r\n  const { loading, currency, error } = currencyDetails;\r\n  \r\n  useEffect(() => {\r\n    dispatch(currencyDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\" }}>\r\n      <Text>Bezier Line Chart</Text>\r\n      <LineChart\r\n        data={{\r\n          labels: result,\r\n          datasets: [\r\n            {\r\n              data: [\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n              ],\r\n            },\r\n          ],\r\n        }}\r\n        width={Dimensions.get(\"window\").width - 35} // from react-native\r\n        height={300}\r\n        yAxisLabel=\"$\"\r\n        yAxisSuffix=\"k\"\r\n        yAxisInterval={1} // optional, defaults to 1\r\n        chartConfig={{\r\n          backgroundColor: \"#e26a00\",\r\n          backgroundGradientFrom: \"#003f5c\",\r\n          backgroundGradientTo: \"#003f5c\",\r\n          decimalPlaces: 2, // optional, defaults to 2dp\r\n          color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16,\r\n          },\r\n          propsForDots: {\r\n            r: \"6\",\r\n            strokeWidth: \".5\",\r\n            stroke: \"#ffa726\",\r\n          },\r\n        }}\r\n        bezier\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 16,\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\nexport default SingleCurrency;\r\n"]},"metadata":{},"sourceType":"module"}