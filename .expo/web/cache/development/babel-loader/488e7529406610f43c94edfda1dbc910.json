{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { currencyDetailsbyUserReducer, currencyDetailsReducer, currencyListReducer, currencyRegisterReducer } from \"./reducers/currencyReducers\";\nimport { addUserReducer, userDetailsReducer, userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\nvar middleware = [thunk];\nvar userInfoFromStorage = null;\nvar initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nvar reducer = combineReducers({\n  currencyList: currencyListReducer,\n  userRegister: userRegisterReducer,\n  userLogin: userLoginReducer,\n  currencyDetails: currencyDetailsReducer,\n  user: userDetailsReducer || addUserReducer,\n  userWallet: currencyDetailsbyUserReducer,\n  currency: currencyRegisterReducer\n});\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"sources":["D:/react native/Crypto/crypto_currency/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","currencyDetailsbyUserReducer","currencyDetailsReducer","currencyListReducer","currencyRegisterReducer","addUserReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","middleware","userInfoFromStorage","initialState","userLogin","userInfo","reducer","currencyList","userRegister","currencyDetails","user","userWallet","currency","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,4BADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,uBAJF;AAMA,SACEC,cADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,mBAJF;AAOA,IAAMC,UAAU,GAAG,CAACV,KAAD,CAAnB;AAEA,IAAMW,mBAAmB,GAAG,IAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAEH;AADD;AADQ,CAArB;AAKA,IAAMI,OAAO,GAAGjB,eAAe,CAAC;AAC9BkB,EAAAA,YAAY,EAAEZ,mBADgB;AAE9Ba,EAAAA,YAAY,EAAER,mBAFgB;AAG9BI,EAAAA,SAAS,EAAEL,gBAHmB;AAI9BU,EAAAA,eAAe,EAAEf,sBAJa;AAK9BgB,EAAAA,IAAI,EAAEZ,kBAAkB,IAAID,cALE;AAM9Bc,EAAAA,UAAU,EAAClB,4BANmB;AAO9BmB,EAAAA,QAAQ,EAAEhB;AAPoB,CAAD,CAA/B;AAUA,IAAMiB,KAAK,GAAGzB,WAAW,CACvBkB,OADuB,EAEvBH,YAFuB,EAGvBX,mBAAmB,CAACF,eAAe,MAAf,SAAmBW,UAAnB,CAAD,CAHI,CAAzB;AAMA,eAAeY,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  currencyDetailsbyUserReducer,\r\n  currencyDetailsReducer,\r\n  currencyListReducer,\r\n  currencyRegisterReducer,\r\n} from \"./reducers/currencyReducers\";\r\nimport {\r\n  addUserReducer,\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst userInfoFromStorage = null;\r\nconst initialState = {\r\n  userLogin: {\r\n    userInfo: userInfoFromStorage,\r\n  },\r\n};\r\nconst reducer = combineReducers({\r\n  currencyList: currencyListReducer,\r\n  userRegister: userRegisterReducer,\r\n  userLogin: userLoginReducer,\r\n  currencyDetails: currencyDetailsReducer,\r\n  user: userDetailsReducer || addUserReducer,\r\n  userWallet:currencyDetailsbyUserReducer,\r\n  currency: currencyRegisterReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}