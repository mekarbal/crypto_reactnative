{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { CURRENCY_LIST_FAIL, CURRENCY_LIST_REQUEST, CURRENCY_LIST_SUCCESS } from \"../constants/constants\";\nexport var listCurrencies = function listCurrencies() {\n  return function _callee(dispatch) {\n    var _await$axios$get, data, items;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: CURRENCY_LIST_REQUEST\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"https://api.coincap.io/v2/assets\"));\n\n          case 4:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n            items = [];\n            data.slice(0, 10).map(function (item) {});\n            dispatch({\n              type: CURRENCY_LIST_SUCCESS,\n              payload: data.data\n            });\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: CURRENCY_LIST_FAIL,\n              payload: _context.t0.message\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};","map":{"version":3,"sources":["D:/react native/crypto_currency/actions/currencyActions.js"],"names":["axios","CURRENCY_LIST_FAIL","CURRENCY_LIST_REQUEST","CURRENCY_LIST_SUCCESS","listCurrencies","dispatch","type","get","data","items","slice","map","item","payload","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,qBAHF;AAMA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhCA,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEJ;AAAR,aAAD,CAAR;AAFgC;AAAA,6CAITF,KAAK,CAACO,GAAN,CAAU,kCAAV,CAJS;;AAAA;AAAA;AAIxBC,YAAAA,IAJwB,oBAIxBA,IAJwB;AAK1BC,YAAAA,KAL0B,GAKpB,EALoB;AAMhCD,YAAAA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,EAAd,EAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAQ,CAE7B,CAFD;AAIAP,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEH,qBAAR;AAA+BU,cAAAA,OAAO,EAAEL,IAAI,CAACA;AAA7C,aAAD,CAAR;AAVgC;AAAA;;AAAA;AAAA;AAAA;AAYhCH,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEL,kBAAR;AAA4BY,cAAAA,OAAO,EAAE,YAAMC;AAA3C,aAAD,CAAR;;AAZgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAvB","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CURRENCY_LIST_FAIL,\r\n  CURRENCY_LIST_REQUEST,\r\n  CURRENCY_LIST_SUCCESS,\r\n} from \"../constants/constants\";\r\n\r\nexport const listCurrencies = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CURRENCY_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"https://api.coincap.io/v2/assets\");\r\n    const items=[]\r\n    data.slice(0, 10).map((item)=>{\r\n        \r\n    })\r\n\r\n    dispatch({ type: CURRENCY_LIST_SUCCESS, payload: data.data });\r\n  } catch (error) {\r\n    dispatch({ type: CURRENCY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}