{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\react native\\\\crypto_currency\\\\components\\\\SingleCurrency.js\";\n\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { Chart, Line, Area, HorizontalAxis, VerticalAxis } from \"react-native-responsive-linechart\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currencyDetail } from \"../actions/currencyActions\";\n\nvar SingleCurrency = function SingleCurrency(props) {\n  var _props$route$params = props.route.params,\n      id = _props$route$params.id,\n      price = _props$route$params.price;\n  var dispatch = useDispatch();\n  var currencyDetails = useSelector(function (state) {\n    return state.currencyDetails;\n  });\n  var loading = currencyDetails.loading,\n      currency = currencyDetails.currency,\n      error = currencyDetails.error;\n  var result = [];\n  var dates = [];\n  var prices = [];\n  var nowHour = new Date().getHours();\n\n  for (var i = nowHour; i <= 24; i++) {\n    if (i > 12) {\n      result.push(i + \"PM\");\n    } else {\n      result.push(i + \"AM\");\n    }\n  }\n\n  var decimals = function decimals(num) {\n    var number = parseFloat(num).toFixed(0);\n    return number;\n  };\n\n  function msToTime(duration) {\n    var hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n    hours = hours < 10 ? \"0\" + hours : hours;\n    return hours;\n  }\n\n  currency && currency.map(function (dataC) {\n    var time = msToTime(dataC.time);\n    dates.push(time);\n    prices.push(parseInt(dataC.priceUsd));\n  });\n  useEffect(function () {\n    dispatch(currencyDetail(id));\n  }, [dispatch]);\n  return React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, id.toUpperCase()), React.createElement(Chart, {\n    style: {\n      height: 200,\n      width: 400\n    },\n    data: [{\n      x: -2,\n      y: 15\n    }],\n    padding: {\n      left: 40,\n      bottom: 20,\n      right: 20,\n      top: 20\n    },\n    xDomain: {\n      min: -2,\n      max: 10\n    },\n    yDomain: {\n      min: 0,\n      max: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(VerticalAxis, {\n    tickCount: 11,\n    theme: {\n      labels: {\n        formatter: function formatter(v) {\n          return v.toFixed(2);\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), React.createElement(HorizontalAxis, {\n    tickCount: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(Area, {\n    theme: {\n      gradient: {\n        from: {\n          color: \"#ffa502\"\n        },\n        to: {\n          color: \"#ffa502\",\n          opacity: 0.4\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(Line, {\n    theme: {\n      stroke: {\n        color: \"#ffa502\",\n        width: 5\n      },\n      scatter: {\n        default: {\n          width: 4,\n          height: 4,\n          rx: 2\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SingleCurrency;","map":{"version":3,"sources":["D:/react native/crypto_currency/components/SingleCurrency.js"],"names":["React","useEffect","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","Chart","Line","Area","HorizontalAxis","VerticalAxis","useDispatch","useSelector","currencyDetail","SingleCurrency","props","route","params","id","price","dispatch","currencyDetails","state","loading","currency","error","result","dates","prices","nowHour","Date","getHours","i","push","decimals","num","number","parseFloat","toFixed","msToTime","duration","hours","Math","floor","map","dataC","time","parseInt","priceUsd","alignItems","fontSize","padding","toUpperCase","height","width","x","y","left","bottom","right","top","min","max","labels","formatter","v","gradient","from","color","to","opacity","stroke","scatter","default","rx"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { View, Text, Dimensions } from \"react-native\";\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart,\r\n} from \"react-native-chart-kit\";\r\nimport {\r\n  Chart,\r\n  Line,\r\n  Area,\r\n  HorizontalAxis,\r\n  VerticalAxis,\r\n} from \"react-native-responsive-linechart\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { currencyDetail } from \"../actions/currencyActions\";\r\n\r\nconst SingleCurrency = (props) => {\r\n  const { id, price } = props.route.params;\r\n  const dispatch = useDispatch();\r\n  const currencyDetails = useSelector((state) => state.currencyDetails);\r\n  const { loading, currency, error } = currencyDetails;\r\n\r\n  var result = [];\r\n  let dates = [];\r\n  let prices = [];\r\n  var nowHour = new Date().getHours();\r\n\r\n  for (var i = nowHour; i <= 24; i++) {\r\n    if (i > 12) {\r\n      result.push(i + \"PM\");\r\n    } else {\r\n      result.push(i + \"AM\");\r\n    }\r\n  }\r\n\r\n  const decimals = (num) => {\r\n    let number = parseFloat(num).toFixed(0);\r\n    return number;\r\n  };\r\n\r\n  function msToTime(duration) {\r\n    var hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n\r\n    hours = hours < 10 ? \"0\" + hours : hours;\r\n\r\n    return hours;\r\n  }\r\n\r\n  currency &&\r\n    currency.map((dataC) => {\r\n      const time = msToTime(dataC.time);\r\n      dates.push(time);\r\n      prices.push(parseInt(dataC.priceUsd));\r\n      // console.log(typeof parseInt(decimals(dataC.priceUsd)));\r\n    });\r\n  useEffect(() => {\r\n    dispatch(currencyDetail(id));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\" }}>\r\n      <Text style={{ fontSize: 20, padding: 20 }}>{id.toUpperCase()}</Text>\r\n      {/* <LineChart\r\n        data={{\r\n          labels: dates && dates,\r\n          datasets: [\r\n            {\r\n              data: prices && prices,\r\n            },\r\n          ],\r\n        }}\r\n        width={Dimensions.get(\"window\").width - 35} // from react-native\r\n        height={300}\r\n        yAxisLabel=\"$\"\r\n        yAxisSuffix=\"k\"\r\n        yAxisInterval={1} // optional, defaults to 1\r\n        chartConfig={{\r\n          backgroundColor: \"#e26a00\",\r\n          backgroundGradientFrom: \"#003f5c\",\r\n          backgroundGradientTo: \"#003f5c\",\r\n          decimalPlaces: 2, // optional, defaults to 2dp\r\n          color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16,\r\n          },\r\n          propsForDots: {\r\n            r: \"6\",\r\n            strokeWidth: \".5\",\r\n            stroke: \"#ffa726\",\r\n          },\r\n        }}\r\n        bezier\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 16,\r\n        }}\r\n      /> */}\r\n      <Chart\r\n        style={{ height: 200, width: 400 }}\r\n        data={[{ x: -2, y: 15 }]}\r\n        padding={{ left: 40, bottom: 20, right: 20, top: 20 }}\r\n        xDomain={{ min: -2, max: 10 }}\r\n        yDomain={{ min: 0, max: 20 }}\r\n      >\r\n        <VerticalAxis\r\n          tickCount={11}\r\n          theme={{ labels: { formatter: (v) => v.toFixed(2) } }}\r\n        />\r\n        <HorizontalAxis tickCount={5} />\r\n        <Area\r\n          theme={{\r\n            gradient: {\r\n              from: { color: \"#ffa502\" },\r\n              to: { color: \"#ffa502\", opacity: 0.4 },\r\n            },\r\n          }}\r\n        />\r\n        <Line\r\n          theme={{\r\n            stroke: { color: \"#ffa502\", width: 5 },\r\n            scatter: { default: { width: 4, height: 4, rx: 2 } },\r\n          }}\r\n        />\r\n      </Chart>\r\n    </View>\r\n  );\r\n};\r\nexport default SingleCurrency;\r\n"]},"metadata":{},"sourceType":"module"}