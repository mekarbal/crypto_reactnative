{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react native\\\\Crypto\\\\crypto_currency\\\\components\\\\SingleCurrency.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currencyDetail } from \"../actions/currencyActions\";\n\nvar SingleCurrency = function SingleCurrency(props) {\n  var _props$route$params = props.route.params,\n      id = _props$route$params.id,\n      price = _props$route$params.price;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      sel = _useState2[0],\n      setSell = _useState2[1];\n\n  var dispatch = useDispatch();\n  var currencyDetails = useSelector(function (state) {\n    return state.currencyDetails;\n  });\n  var loading = currencyDetails.loading,\n      currency = currencyDetails.currency,\n      error = currencyDetails.error;\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var userInfo = user.userInfo;\n  console.log(userInfo + \"eeeeeeeeeeeeeeeeeeeee\");\n  var result = [];\n  var dates = [];\n  var prices = [];\n  var nowHour = new Date().getHours();\n\n  for (var i = nowHour; i <= 24; i++) {\n    if (i > 12) {\n      result.push(i + \"PM\");\n    } else {\n      result.push(i + \"AM\");\n    }\n  }\n\n  var decimals = function decimals(num) {\n    var number = parseFloat(num).toFixed(0);\n    return number;\n  };\n\n  function msToTime(duration) {\n    var hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n    hours = hours < 10 ? \"0\" + hours : hours;\n    return hours;\n  }\n\n  var sell = function sell() {\n    setSell(true);\n  };\n\n  currency && currency.map(function (dataC) {\n    var time = msToTime(dataC.time);\n    dates.push(time);\n    prices.push(parseInt(dataC.priceUsd));\n  });\n  useEffect(function () {\n    dispatch(currencyDetail(id));\n  }, [dispatch]);\n  return React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      padding: 20,\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, id.toUpperCase()), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      padding: 20,\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"$\", price)), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      backgroundColor: \"#003f5c\",\n      height: 50,\n      width: \"95%\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      padding: 20,\n      borderRadius: 36\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Currency : \", userInfo.localCrncy)), currency !== null ? React.createElement(LineChart, {\n    data: {\n      labels: dates && dates,\n      datasets: [{\n        data: [12, 232323, 344, 3434, 455, 12]\n      }]\n    },\n    width: Dimensions.get(\"window\").width - 35,\n    height: 300,\n    yAxisLabel: \"$\",\n    yAxisSuffix: \"k\",\n    yAxisInterval: 1,\n    chartConfig: {\n      backgroundColor: \"#e26a00\",\n      backgroundGradientFrom: \"#003f5c\",\n      backgroundGradientTo: \"#003f5c\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \".5\",\n        stroke: \"#ffa726\"\n      }\n    },\n    bezier: true,\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"no data here\"), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: function onPress() {\n      return sell();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"SELL\")), sel && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"sell\"));\n};\n\nvar styles = StyleSheet.create({\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#003f5c\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  }\n});\nexport default SingleCurrency;","map":{"version":3,"sources":["D:/react native/Crypto/crypto_currency/components/SingleCurrency.js"],"names":["React","useEffect","useState","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","useDispatch","useSelector","currencyDetail","SingleCurrency","props","route","params","id","price","sel","setSell","dispatch","currencyDetails","state","loading","currency","error","user","userInfo","console","log","result","dates","prices","nowHour","Date","getHours","i","push","decimals","num","number","parseFloat","toFixed","msToTime","duration","hours","Math","floor","sell","map","dataC","time","parseInt","priceUsd","alignItems","flexDirection","fontSize","padding","color","toUpperCase","backgroundColor","height","width","justifyContent","borderRadius","localCrncy","labels","datasets","data","Dimensions","get","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","style","propsForDots","r","strokeWidth","stroke","marginVertical","styles","loginBtn","StyleSheet","create","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Dimensions,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart,\r\n} from \"react-native-chart-kit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { currencyDetail } from \"../actions/currencyActions\";\r\n\r\nconst SingleCurrency = (props) => {\r\n  const { id, price } = props.route.params;\r\n  const [sel, setSell] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const currencyDetails = useSelector((state) => state.currencyDetails);\r\n  const { loading, currency, error } = currencyDetails;\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const { userInfo } = user;\r\n\r\n  console.log(userInfo + \"eeeeeeeeeeeeeeeeeeeee\");\r\n\r\n  var result = [];\r\n  let dates = [];\r\n  let prices = [];\r\n  var nowHour = new Date().getHours();\r\n\r\n  for (var i = nowHour; i <= 24; i++) {\r\n    if (i > 12) {\r\n      result.push(i + \"PM\");\r\n    } else {\r\n      result.push(i + \"AM\");\r\n    }\r\n  }\r\n\r\n  const decimals = (num) => {\r\n    let number = parseFloat(num).toFixed(0);\r\n    return number;\r\n  };\r\n\r\n  function msToTime(duration) {\r\n    var hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n\r\n    hours = hours < 10 ? \"0\" + hours : hours;\r\n\r\n    return hours;\r\n  }\r\n\r\n  const sell = () => {\r\n    setSell(true);\r\n  };\r\n\r\n  currency &&\r\n    currency.map((dataC) => {\r\n      const time = msToTime(dataC.time);\r\n      dates.push(time);\r\n      prices.push(parseInt(dataC.priceUsd));\r\n      // console.log(typeof parseInt(decimals(dataC.priceUsd)));\r\n    });\r\n  useEffect(() => {\r\n    dispatch(currencyDetail(id));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\" }}>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <Text style={{ fontSize: 20, padding: 20, color: \"black\" }}>\r\n          {id.toUpperCase()}\r\n        </Text>\r\n        <Text style={{ fontSize: 18, padding: 20, color: \"black\" }}>\r\n          ${price}\r\n        </Text>\r\n      </View>\r\n      <View\r\n        style={{\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#003f5c\",\r\n          height: 50,\r\n          width: \"95%\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          padding: 20,\r\n          borderRadius: 36,\r\n        }}\r\n      >\r\n        {/* <Text style={{ color: \"white\" }}>Solde : {userInfo.solde}</Text>\r\n        <Text style={{ color: \"white\" }}>Currency : {userInfo.localCrncy}</Text> */}\r\n        <Text style={{ color: \"white\" }}>Currency : {userInfo.localCrncy}</Text>\r\n      </View>\r\n\r\n      {currency !== null ? (\r\n        <LineChart\r\n          data={{\r\n            labels: dates && dates,\r\n            datasets: [\r\n              {\r\n                data: [12, 232323, 344, 3434, 455, 12],\r\n              },\r\n            ],\r\n          }}\r\n          width={Dimensions.get(\"window\").width - 35} // from react-native\r\n          height={300}\r\n          yAxisLabel=\"$\"\r\n          yAxisSuffix=\"k\"\r\n          yAxisInterval={1} // optional, defaults to 1\r\n          chartConfig={{\r\n            backgroundColor: \"#e26a00\",\r\n            backgroundGradientFrom: \"#003f5c\",\r\n            backgroundGradientTo: \"#003f5c\",\r\n            decimalPlaces: 2, // optional, defaults to 2dp\r\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            style: {\r\n              borderRadius: 16,\r\n            },\r\n            propsForDots: {\r\n              r: \"6\",\r\n              strokeWidth: \".5\",\r\n              stroke: \"#ffa726\",\r\n            },\r\n          }}\r\n          bezier\r\n          style={{\r\n            marginVertical: 8,\r\n            borderRadius: 16,\r\n          }}\r\n        />\r\n      ) : (\r\n        <Text>no data here</Text>\r\n      )}\r\n\r\n      <TouchableOpacity style={styles.loginBtn} onPress={() => sell()}>\r\n        <Text style={{ color: \"white\" }}>SELL</Text>\r\n      </TouchableOpacity>\r\n      {sel && <Text>sell</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#003f5c\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    marginBottom: 10,\r\n  },\r\n});\r\nexport default SingleCurrency;\r\n"]},"metadata":{},"sourceType":"module"}