{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/constants\";\nimport firebase from \"../configs/firebase\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var register = function register(email, password) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: USER_REGISTER_REQUEST\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password).then(function (data) {\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data.user\n              });\n              AsyncStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n            }));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: USER_REGISTER_FAIL,\n              payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n};\nexport var login = function login(email, password) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            try {\n              dispatch({\n                type: USER_LOGIN_REQUEST\n              });\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem(\"userInfo\", JSON.stringify(data));\n            } catch (error) {\n              dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: error\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["D:/react native/crypto_currency/actions/userActions.js"],"names":["USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","firebase","AsyncStorage","register","email","password","dispatch","type","auth","createUserWithEmailAndPassword","then","data","payload","user","setItem","JSON","stringify","response","message","login","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","localStorage","error","USER_LOGIN_FAIL"],"mappings":";AAAA,SACEA,kBADF,EAEEC,qBAFF,EAGEC,qBAHF;AAKA,OAAOC,QAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAqB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzCA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAER;AADC,aAAD,CAAR;AAFyC;AAAA,6CAMnCE,QAAQ,CACXO,IADG,GAEHC,8BAFG,CAE4BL,KAF5B,EAEmCC,QAFnC,EAGHK,IAHG,CAGE,UAACC,IAAD,EAAU;AACdL,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEP,qBADC;AAEPY,gBAAAA,OAAO,EAAED,IAAI,CAACE;AAFP,eAAD,CAAR;AAIAX,cAAAA,YAAY,CAACY,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAI,CAACE,IAApB,CAAjC;AACD,aATG,CANmC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBzCP,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAET,kBADC;AAEPc,cAAAA,OAAO,EACL,YAAMK,QAAN,IAAkB,YAAMA,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACI,YAAMD,QAAN,CAAeN,IAAf,CAAoBO,OADxB,GAEI,YAAMA;AALL,aAAD,CAAR;;AAnByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;AAAA,CAAjB;AA6BP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACf,KAAD,EAAQC,QAAR;AAAA,SAAqB,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACxC,gBAAI;AACFA,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEa;AADC,eAAD,CAAR;AAQAd,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEc,kBADC;AAEPT,gBAAAA,OAAO,EAAED;AAFF,eAAD,CAAR;AAKAW,cAAAA,YAAY,CAACR,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,aAfD,CAeE,OAAOY,KAAP,EAAc;AACdjB,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEiB,eADC;AAEPZ,gBAAAA,OAAO,EAAEW;AAFF,eAAD,CAAR;AAID;;AArBuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;AAAA,CAAd","sourcesContent":["import {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from \"../constants/constants\";\r\nimport firebase from \"../configs/firebase\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((data) => {\r\n        dispatch({\r\n          type: USER_REGISTER_SUCCESS,\r\n          payload: data.user,\r\n        });\r\n        AsyncStorage.setItem(\"userInfo\", JSON.stringify(data.user));\r\n      });\r\n\r\n \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    \r\n\r\n    \r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}