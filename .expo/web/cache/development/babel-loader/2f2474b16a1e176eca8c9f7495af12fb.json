{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\react native\\\\crypto_currency\\\\components\\\\Currencies.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listCurrencies } from \"../actions/currencyActions\";\nimport Item from \"./Item\";\nexport default function Currencies(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var dispatch = useDispatch();\n  var currencyList = useSelector(function (state) {\n    return state.currencyList;\n  });\n  var currencies = currencyList.currencies;\n  var userLogin = useSelector(function (state) {\n    return state.userLogin;\n  });\n  var error = userLogin.error;\n  var nav = props.navigation;\n  var items = [];\n  currencies && currencies.slice(0, 10).map(function (item) {\n    items.push(item);\n  });\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    setTimeout(function () {\n      setRefreshing(false);\n      dispatch(listCurrencies());\n    }, 200);\n  });\n  useEffect(function () {\n    var dt = 82800000;\n    console.log((dt.getMonth() + 1).toString().padStart(2, '0') + \"/\" + dt.getDate().toString().padStart(2, '0') + \"/\" + dt.getFullYear().toString().padStart(4, '0') + \" \" + dt.getHours().toString().padStart(2, '0') + \":\" + dt.getMinutes().toString().padStart(2, '0') + \":\" + dt.getSeconds().toString().padStart(2, '0'));\n\n    if (error) {\n      props.navigation.navigate(\"Login\");\n    } else {\n      dispatch(listCurrencies());\n    }\n  }, [dispatch, error]);\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      flex: 1\n    },\n    data: items,\n    renderItem: function renderItem(props) {\n      return React.createElement(Item, {\n        item: props.item,\n        navigation: nav,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 32\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F7F7F7\"\n  }\n});","map":{"version":3,"sources":["D:/react native/crypto_currency/components/Currencies.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","listCurrencies","Item","Currencies","props","refreshing","setRefreshing","dispatch","currencyList","state","currencies","userLogin","error","nav","navigation","items","slice","map","item","push","onRefresh","setTimeout","dt","console","log","getMonth","toString","padStart","getDate","getFullYear","getHours","getMinutes","getSeconds","navigate","styles","container","flex","id","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FlatList, StyleSheet, ScrollView,RefreshControl } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listCurrencies } from \"../actions/currencyActions\";\r\nimport Item from \"./Item\";\r\n\r\nexport default function Currencies(props) {\r\n  const [refreshing,setRefreshing] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const currencyList = useSelector((state) => state.currencyList);\r\n  const { currencies } = currencyList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error } = userLogin;\r\n  const nav = props.navigation;\r\n  const items = [];\r\n  currencies &&\r\n    currencies.slice(0, 10).map((item) => {\r\n      items.push(item);\r\n    });\r\n    \r\n    const onRefresh=useCallback(() => {\r\n      setRefreshing(true);\r\n      \r\n      \r\n      setTimeout(() => {\r\n        setRefreshing(false);\r\n        dispatch(listCurrencies());\r\n      },200)\r\n      \r\n    })\r\n\r\n  useEffect(() => {\r\n    \r\n    var dt = 82800000;\r\n\r\nconsole.log(`${\r\n    (dt.getMonth()+1).toString().padStart(2, '0')}/${\r\n    dt.getDate().toString().padStart(2, '0')}/${\r\n    dt.getFullYear().toString().padStart(4, '0')} ${\r\n    dt.getHours().toString().padStart(2, '0')}:${\r\n    dt.getMinutes().toString().padStart(2, '0')}:${\r\n    dt.getSeconds().toString().padStart(2, '0')}`\r\n);\r\n    \r\n    if (error) {\r\n      props.navigation.navigate(\"Login\");\r\n    } else {\r\n      dispatch(listCurrencies());\r\n    }\r\n  }, [dispatch, error]);\r\n\r\n  return (\r\n    <ScrollView style={styles.container} refreshControl={\r\n      <RefreshControl refreshing={refreshing} onRefresh={onRefresh}/>\r\n    }>\r\n      <FlatList\r\n        style={{ flex: 1 }}\r\n        data={items}\r\n        renderItem={(props) => <Item item={props.item} navigation={nav} />}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n    </ScrollView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#F7F7F7\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}