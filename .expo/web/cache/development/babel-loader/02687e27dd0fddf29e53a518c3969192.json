{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { currencyDetailsbyUserReducer, currencyDetailsReducer, currencyListReducer, currencyRegisterReducer, currencySellReducer, sendMailReducer } from \"./reducers/currencyReducers\";\nimport { addUserReducer, userDetailsReducer, userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\nvar middleware = [thunk];\nvar userInfoFromStorage = null;\nvar initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nvar reducer = combineReducers({\n  currencyList: currencyListReducer,\n  userRegister: userRegisterReducer,\n  userLogin: userLoginReducer,\n  currencyDetails: currencyDetailsReducer,\n  user: userDetailsReducer || addUserReducer,\n  userWallet: currencyDetailsbyUserReducer,\n  currencyBuy: currencyRegisterReducer,\n  currencySell: currencySellReducer,\n  send: sendMailReducer\n});\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"sources":["D:/react native/Crypto/crypto_currency/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","currencyDetailsbyUserReducer","currencyDetailsReducer","currencyListReducer","currencyRegisterReducer","currencySellReducer","sendMailReducer","addUserReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","middleware","userInfoFromStorage","initialState","userLogin","userInfo","reducer","currencyList","userRegister","currencyDetails","user","userWallet","currencyBuy","currencySell","send","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,4BADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,uBAJF,EAKEC,mBALF,EAMEC,eANF;AAQA,SACEC,cADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,mBAJF;AAOA,IAAMC,UAAU,GAAG,CAACZ,KAAD,CAAnB;AAEA,IAAMa,mBAAmB,GAAG,IAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAEH;AADD;AADQ,CAArB;AAKA,IAAMI,OAAO,GAAGnB,eAAe,CAAC;AAC9BoB,EAAAA,YAAY,EAAEd,mBADgB;AAE9Be,EAAAA,YAAY,EAAER,mBAFgB;AAG9BI,EAAAA,SAAS,EAAEL,gBAHmB;AAI9BU,EAAAA,eAAe,EAAEjB,sBAJa;AAK9BkB,EAAAA,IAAI,EAAEZ,kBAAkB,IAAID,cALE;AAM9Bc,EAAAA,UAAU,EAACpB,4BANmB;AAO9BqB,EAAAA,WAAW,EAAElB,uBAPiB;AAQ9BmB,EAAAA,YAAY,EAAElB,mBARgB;AAS9BmB,EAAAA,IAAI,EAAClB;AATyB,CAAD,CAA/B;AAYA,IAAMmB,KAAK,GAAG7B,WAAW,CACvBoB,OADuB,EAEvBH,YAFuB,EAGvBb,mBAAmB,CAACF,eAAe,MAAf,SAAmBa,UAAnB,CAAD,CAHI,CAAzB;AAMA,eAAec,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  currencyDetailsbyUserReducer,\r\n  currencyDetailsReducer,\r\n  currencyListReducer,\r\n  currencyRegisterReducer,\r\n  currencySellReducer,\r\n  sendMailReducer,\r\n} from \"./reducers/currencyReducers\";\r\nimport {\r\n  addUserReducer,\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst userInfoFromStorage = null;\r\nconst initialState = {\r\n  userLogin: {\r\n    userInfo: userInfoFromStorage,\r\n  },\r\n};\r\nconst reducer = combineReducers({\r\n  currencyList: currencyListReducer,\r\n  userRegister: userRegisterReducer,\r\n  userLogin: userLoginReducer,\r\n  currencyDetails: currencyDetailsReducer,\r\n  user: userDetailsReducer || addUserReducer,\r\n  userWallet:currencyDetailsbyUserReducer,\r\n  currencyBuy: currencyRegisterReducer,\r\n  currencySell: currencySellReducer,\r\n  send:sendMailReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}