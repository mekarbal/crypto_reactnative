{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { currencyListReducer } from \"./reducers/currencyReducers\";\nimport { userRegisterReducer } from \"./reducers/userReducers\";\nvar middleware = [thunk];\nvar initialState = {};\nvar reducer = combineReducers({\n  currencyList: currencyListReducer,\n  userRegister: userRegisterReducer\n});\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"sources":["D:/react native/crypto_currency/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","currencyListReducer","userRegisterReducer","middleware","initialState","reducer","currencyList","userRegister","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,mBAAT;AACA,SAAQC,mBAAR;AAEA,IAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AAIA,IAAMK,YAAY,GAAG,EAArB;AACA,IAAMC,OAAO,GAAGR,eAAe,CAAC;AAC9BS,EAAAA,YAAY,EAAEL,mBADgB;AAE9BM,EAAAA,YAAY,EAAEL;AAFgB,CAAD,CAA/B;AAKA,IAAMM,KAAK,GAAGZ,WAAW,CACvBS,OADuB,EAEvBD,YAFuB,EAGvBJ,mBAAmB,CAACF,eAAe,MAAf,SAAmBK,UAAnB,CAAD,CAHI,CAAzB;AAMA,eAAeK,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { currencyListReducer } from \"./reducers/currencyReducers\";\r\nimport {userRegisterReducer} from \"./reducers/userReducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\n\r\nconst initialState = {};\r\nconst reducer = combineReducers({\r\n  currencyList: currencyListReducer,\r\n  userRegister: userRegisterReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}