{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\react native\\\\crypto_currency\\\\components\\\\Currencies.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listCurrencies } from \"../actions/currencyActions\";\nimport Item from \"./Item\";\nexport default function Currencies(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var dispatch = useDispatch();\n  var currencyList = useSelector(function (state) {\n    return state.currencyList;\n  });\n  var currencies = currencyList.currencies;\n  var userLogin = useSelector(function (state) {\n    return state.userLogin;\n  });\n  var error = userLogin.error;\n  var userRegister = useSelector(function (state) {\n    return state.userRegister;\n  });\n  var err = userRegister.err;\n  var nav = props.navigation;\n  var items = [];\n  currencies && currencies.slice(0, 10).map(function (item) {\n    items.push(item);\n  });\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    setTimeout(function () {\n      setRefreshing(false);\n      dispatch(listCurrencies());\n    }, 200);\n  });\n  useEffect(function () {\n    function msToTime(duration) {\n      var seconds = Math.floor(duration / 1000 % 60),\n          minutes = Math.floor(duration / (1000 * 60) % 60),\n          hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n      hours = hours < 10 ? \"0\" + hours : hours;\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      return hours + \":\" + minutes;\n    }\n\n    if (error || err) {\n      props.navigation.navigate(\"Login\");\n    } else {\n      dispatch(listCurrencies());\n    }\n  }, [dispatch, error]);\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      flex: 1\n    },\n    data: items,\n    renderItem: function renderItem(props) {\n      return React.createElement(Item, {\n        item: props.item,\n        navigation: nav,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 32\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F7F7F7\"\n  }\n});","map":{"version":3,"sources":["D:/react native/crypto_currency/components/Currencies.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","listCurrencies","Item","Currencies","props","refreshing","setRefreshing","dispatch","currencyList","state","currencies","userLogin","error","userRegister","err","nav","navigation","items","slice","map","item","push","onRefresh","setTimeout","msToTime","duration","seconds","Math","floor","minutes","hours","navigate","styles","container","flex","id","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FlatList, StyleSheet, ScrollView, RefreshControl } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listCurrencies } from \"../actions/currencyActions\";\r\nimport Item from \"./Item\";\r\n\r\nexport default function Currencies(props) {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const currencyList = useSelector((state) => state.currencyList);\r\n  const { currencies } = currencyList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error } = userLogin;\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { err } = userRegister;\r\n  const nav = props.navigation;\r\n  const items = [];\r\n  currencies &&\r\n    currencies.slice(0, 10).map((item) => {\r\n      items.push(item);\r\n    });\r\n\r\n  const onRefresh = useCallback(() => {\r\n    setRefreshing(true);\r\n\r\n    setTimeout(() => {\r\n      setRefreshing(false);\r\n      dispatch(listCurrencies());\r\n    }, 200);\r\n  });\r\n\r\n  useEffect(() => {\r\n    function msToTime(duration) {\r\n      var seconds = Math.floor((duration / 1000) % 60),\r\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\r\n        hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n\r\n      hours = hours < 10 ? \"0\" + hours : hours;\r\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n      return hours + \":\" + minutes;\r\n    }\r\n   \r\n\r\n    if (error || err) {\r\n      props.navigation.navigate(\"Login\");\r\n    } else {\r\n      dispatch(listCurrencies());\r\n    }\r\n  }, [dispatch, error]);\r\n\r\n  return (\r\n    <ScrollView\r\n      style={styles.container}\r\n      refreshControl={\r\n        <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n      }\r\n    >\r\n      <FlatList\r\n        style={{ flex: 1 }}\r\n        data={items}\r\n        renderItem={(props) => <Item item={props.item} navigation={nav} />}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n    </ScrollView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#F7F7F7\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}