{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/constants\";\nimport firebase from \"../configs/firebase\";\nexport var register = function register(email, password) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: USER_REGISTER_REQUEST\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password).then(function (data) {\n              console.log(data.user);\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              });\n            }));\n\n          case 4:\n            localStorage.setItem(\"userInfo\", JSON.stringify(data));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: USER_REGISTER_FAIL,\n              payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};","map":{"version":3,"sources":["D:/react native/crypto_currency/actions/userActions.js"],"names":["USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","firebase","register","email","password","dispatch","type","auth","createUserWithEmailAndPassword","then","data","console","log","user","payload","localStorage","setItem","JSON","stringify","response","message"],"mappings":";AAAA,SACEA,kBADF,EAEEC,qBAFF,EAGEC,qBAHF;AAKA,OAAOC,QAAP;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAqB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzCA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEP;AADC,aAAD,CAAR;AAFyC;AAAA,6CAMnCE,QAAQ,CACXM,IADG,GAEHC,8BAFG,CAE4BL,KAF5B,EAEmCC,QAFnC,EAGHK,IAHG,CAGE,UAACC,IAAD,EAAU;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACAR,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEN,qBADC;AAEPc,gBAAAA,OAAO,EAAEJ;AAFF,eAAD,CAAR;AAID,aATG,CANmC;;AAAA;AAuBzCK,YAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAjC;AAvByC;AAAA;;AAAA;AAAA;AAAA;AAyBzCL,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAER,kBADC;AAEPgB,cAAAA,OAAO,EACL,YAAMK,QAAN,IAAkB,YAAMA,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACI,YAAMD,QAAN,CAAeT,IAAf,CAAoBU,OADxB,GAEI,YAAMA;AALL,aAAD,CAAR;;AAzByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;AAAA,CAAjB","sourcesContent":["import {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from \"../constants/constants\";\r\nimport firebase from \"../configs/firebase\";\r\nexport const register = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((data) => {\r\n        console.log(data.user);\r\n        dispatch({\r\n          type: USER_REGISTER_SUCCESS,\r\n          payload: data,\r\n        });\r\n      });\r\n\r\n\r\n    //   dispatch({\r\n    //     type: USER_LOGIN_SUCCESS,\r\n    //     payload: data,\r\n    //   });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}