{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/constants\";\nimport firebase from \"../configs/firebase\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var register = function register(email, password) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: USER_REGISTER_REQUEST\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password).then(function (data) {\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data.user\n              });\n              AsyncStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n            }));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: USER_REGISTER_FAIL,\n              payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n};\nexport var login = function login(email, password) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch({\n              type: USER_LOGIN_REQUEST\n            });\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password).then(function (data) {\n              console.log(data);\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data.user\n              });\n              AsyncStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n            }));\n\n          case 4:\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: USER_LOGIN_FAIL,\n              payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n};\nexport var add = function add(f_uid) {\n  return function _callee3(dispatch) {\n    var config, _await$axios$post, data;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            dispatch({\n              type: ADD_USER_REQUEST\n            });\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:5000/user/add/\" + f_uid, config));\n\n          case 5:\n            _await$axios$post = _context3.sent;\n            data = _await$axios$post.data;\n            dispatch({\n              type: ADD_USER_SUCCESS,\n              payload: data\n            });\n            _context3.next = 13;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            dispatch({\n              type: ADD_USER_FAIL,\n              payload: _context3.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};","map":{"version":3,"sources":["D:/react native/crypto_currency/actions/userActions.js"],"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","firebase","AsyncStorage","register","email","password","dispatch","type","auth","createUserWithEmailAndPassword","then","data","payload","user","setItem","JSON","stringify","response","message","login","signInWithEmailAndPassword","console","log","add","f_uid","ADD_USER_REQUEST","config","headers","axios","post","ADD_USER_SUCCESS","ADD_USER_FAIL"],"mappings":";AAAA,SACEA,eADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,qBALF,EAMEC,qBANF;AAQA,OAAOC,QAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAqB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzCA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAER;AADC,aAAD,CAAR;AAFyC;AAAA,6CAMnCE,QAAQ,CACXO,IADG,GAEHC,8BAFG,CAE4BL,KAF5B,EAEmCC,QAFnC,EAGHK,IAHG,CAGE,UAACC,IAAD,EAAU;AACdL,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEP,qBADC;AAEPY,gBAAAA,OAAO,EAAED,IAAI,CAACE;AAFP,eAAD,CAAR;AAIAX,cAAAA,YAAY,CAACY,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAI,CAACE,IAApB,CAAjC;AACD,aATG,CANmC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBzCP,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAET,kBADC;AAEPc,cAAAA,OAAO,EACL,YAAMK,QAAN,IAAkB,YAAMA,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACI,YAAMD,QAAN,CAAeN,IAAf,CAAoBO,OADxB,GAEI,YAAMA;AALL,aAAD,CAAR;;AAjByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;AAAA,CAAjB;AA2BP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACf,KAAD,EAAQC,QAAR;AAAA,SAAqB,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtCA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEX;AADC,aAAD,CAAR;AAFsC;AAAA,6CAMhCK,QAAQ,CACXO,IADG,GAEHY,0BAFG,CAEwBhB,KAFxB,EAE+BC,QAF/B,EAGHK,IAHG,CAGE,UAACC,IAAD,EAAU;AACdU,cAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAL,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEV,kBADC;AAEPe,gBAAAA,OAAO,EAAED,IAAI,CAACE;AAFP,eAAD,CAAR;AAIAX,cAAAA,YAAY,CAACY,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAI,CAACE,IAApB,CAAjC;AAED,aAXG,CANgC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBtCP,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEZ,eADC;AAEPiB,cAAAA,OAAO,EACL,aAAMK,QAAN,IAAkB,aAAMA,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACI,aAAMD,QAAN,CAAeN,IAAf,CAAoBO,OADxB,GAEI,aAAMA;AALL,aAAD,CAAR;;AAnBsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;AAAA,CAAd;AA6BP,OAAO,IAAMK,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD;AAAA,SAAW,kBAAOlB,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BA,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEkB;AADC,aAAD,CAAR;AAIMC,YAAAA,MANoB,GAMX;AACbC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AADI,aANW;AAAA;AAAA,6CAaHC,KAAK,CAACC,IAAN,CACrB,oCAAoCL,KADf,EAErBE,MAFqB,CAbG;;AAAA;AAAA;AAalBf,YAAAA,IAbkB,qBAalBA,IAbkB;AAkB1BL,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEuB,gBADC;AAEPlB,cAAAA,OAAO,EAAED;AAFF,aAAD,CAAR;AAlB0B;AAAA;;AAAA;AAAA;AAAA;AAuB1BL,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEwB,aADC;AAEPnB,cAAAA,OAAO;AAFA,aAAD,CAAR;;AAvB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;AAAA,CAAZ","sourcesContent":["import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from \"../constants/constants\";\r\nimport firebase from \"../configs/firebase\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((data) => {\r\n        dispatch({\r\n          type: USER_REGISTER_SUCCESS,\r\n          payload: data.user,\r\n        });\r\n        AsyncStorage.setItem(\"userInfo\", JSON.stringify(data.user));\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: data.user,\r\n        });\r\n        AsyncStorage.setItem(\"userInfo\", JSON.stringify(data.user));\r\n        \r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const add = (f_uid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ADD_USER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    \r\n\r\n    const { data } = await axios.post(\r\n      \"http://localhost:5000/user/add/\" + f_uid,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_USER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_USER_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}