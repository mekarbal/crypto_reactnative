{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { CURRENCY_DETAILS_FAIL, CURRENCY_DETAILS_REQUEST, CURRENCY_DETAILS_SUCCESS, CURRENCY_LIST_FAIL, CURRENCY_LIST_REQUEST, CURRENCY_LIST_SUCCESS } from \"../constants/constants\";\nexport var listCurrencies = function listCurrencies() {\n  return function _callee(dispatch) {\n    var _await$axios$get, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: CURRENCY_LIST_REQUEST\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"https://api.coingecko.com/api/v3/coins\"));\n\n          case 4:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n            dispatch({\n              type: CURRENCY_LIST_SUCCESS,\n              payload: data\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: CURRENCY_LIST_FAIL,\n              payload: _context.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\nexport var currencyDetail = function currencyDetail(id) {\n  return function _callee2(dispatch) {\n    var _await$axios$get2, data;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch({\n              type: CURRENCY_DETAILS_REQUEST\n            });\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"https://api.coincap.io/v2/assets/\" + id + \"/history?interval=h2&start=\" + (Date.now() - 85800000) + \"&end=\" + Date.now()));\n\n          case 4:\n            _await$axios$get2 = _context2.sent;\n            data = _await$axios$get2.data;\n            dispatch({\n              type: CURRENCY_DETAILS_SUCCESS,\n              payload: data.data\n            });\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: CURRENCY_DETAILS_FAIL,\n              payload: _context2.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\nexport var CurrencyRe = function CurrencyRe() {\n  return function _callee3(dispatch) {\n    var _await$axios$get3, data;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            dispatch({\n              type: CURRENCY_LIST_REQUEST\n            });\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"https://api.coingecko.com/api/v3/coins\"));\n\n          case 4:\n            _await$axios$get3 = _context3.sent;\n            data = _await$axios$get3.data;\n            dispatch({\n              type: CURRENCY_LIST_SUCCESS,\n              payload: data\n            });\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            dispatch({\n              type: CURRENCY_LIST_FAIL,\n              payload: _context3.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};","map":{"version":3,"sources":["D:/react native/Crypto/crypto_currency/actions/currencyActions.js"],"names":["axios","CURRENCY_DETAILS_FAIL","CURRENCY_DETAILS_REQUEST","CURRENCY_DETAILS_SUCCESS","CURRENCY_LIST_FAIL","CURRENCY_LIST_REQUEST","CURRENCY_LIST_SUCCESS","listCurrencies","dispatch","type","get","data","payload","message","currencyDetail","id","Date","now","CurrencyRe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,qBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,kBAJF,EAKEC,qBALF,EAMEC,qBANF;AASA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhCA,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEJ;AAAR,aAAD,CAAR;AAFgC;AAAA,6CAITL,KAAK,CAACU,GAAN,CAAU,wCAAV,CAJS;;AAAA;AAAA;AAIxBC,YAAAA,IAJwB,oBAIxBA,IAJwB;AAMhCH,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEH,qBAAR;AAA+BM,cAAAA,OAAO,EAAED;AAAxC,aAAD,CAAR;AANgC;AAAA;;AAAA;AAAA;AAAA;AAQhCH,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEL,kBAAR;AAA4BQ,cAAAA,OAAO,EAAE,YAAMC;AAA3C,aAAD,CAAR;;AARgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAvB;AAWP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD;AAAA,SAAQ,kBAAOP,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAElCA,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEP;AAAR,aAAD,CAAR;AAFkC;AAAA,6CAGXF,KAAK,CAACU,GAAN,uCACeK,EADf,oCAEnBC,IAAI,CAACC,GAAL,KAAa,QAFM,cAGbD,IAAI,CAACC,GAAL,EAHa,CAHW;;AAAA;AAAA;AAG1BN,YAAAA,IAH0B,qBAG1BA,IAH0B;AASlCH,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAEN,wBADC;AAEPS,cAAAA,OAAO,EAAED,IAAI,CAACA;AAFP,aAAD,CAAR;AATkC;AAAA;;AAAA;AAAA;AAAA;AAclCH,YAAAA,QAAQ,CAAC;AACPC,cAAAA,IAAI,EAAER,qBADC;AAEPW,cAAAA,OAAO;AAFA,aAAD,CAAR;;AAdkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;AAAA,CAAvB;AAqBP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,kBAAOV,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5BA,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEJ;AAAR,aAAD,CAAR;AAF4B;AAAA,6CAILL,KAAK,CAACU,GAAN,CAAU,wCAAV,CAJK;;AAAA;AAAA;AAIpBC,YAAAA,IAJoB,qBAIpBA,IAJoB;AAM5BH,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEH,qBAAR;AAA+BM,cAAAA,OAAO,EAAED;AAAxC,aAAD,CAAR;AAN4B;AAAA;;AAAA;AAAA;AAAA;AAQ5BH,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEL,kBAAR;AAA4BQ,cAAAA,OAAO,EAAE,aAAMC;AAA3C,aAAD,CAAR;;AAR4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAnB","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CURRENCY_DETAILS_FAIL,\r\n  CURRENCY_DETAILS_REQUEST,\r\n  CURRENCY_DETAILS_SUCCESS,\r\n  CURRENCY_LIST_FAIL,\r\n  CURRENCY_LIST_REQUEST,\r\n  CURRENCY_LIST_SUCCESS,\r\n} from \"../constants/constants\";\r\n\r\nexport const listCurrencies = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CURRENCY_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"https://api.coingecko.com/api/v3/coins\");\r\n\r\n    dispatch({ type: CURRENCY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CURRENCY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\nexport const currencyDetail = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CURRENCY_DETAILS_REQUEST });\r\n    const { data } = await axios.get(\r\n      `https://api.coincap.io/v2/assets/${id}/history?interval=h2&start=${\r\n        Date.now() - 85800000\r\n      }&end=${Date.now()}`\r\n    );\r\n\r\n    dispatch({\r\n      type: CURRENCY_DETAILS_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CURRENCY_DETAILS_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\nexport const CurrencyRe = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CURRENCY_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"https://api.coingecko.com/api/v3/coins\");\r\n\r\n    dispatch({ type: CURRENCY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CURRENCY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}