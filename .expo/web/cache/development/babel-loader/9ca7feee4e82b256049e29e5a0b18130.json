{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react native\\\\Crypto\\\\crypto_currency\\\\components\\\\SingleCurrency.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currencyDetail, currencyDetailsByUserId, currencyRegister, currencySell, sendMail } from \"../actions/currencyActions\";\nimport Slider from \"@react-native-community/slider\";\n\nvar SingleCurrency = function SingleCurrency(props) {\n  var _props$route$params = props.route.params,\n      id = _props$route$params.id,\n      price = _props$route$params.price;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      sel = _useState2[0],\n      setSell = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      buy = _useState4[0],\n      setBuy = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userInfo = _useState6[0],\n      setUserInfo = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      solde = _useState8[0],\n      setSolde = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      soldeSell = _useState10[0],\n      setSoldeSell = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      soldeBuy = _useState12[0],\n      setSoldeBuy = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      localCrncy = _useState14[0],\n      setLocalCrncy = _useState14[1];\n\n  var subject = \"Payement passed sucessfully\";\n  var textSell = \"you buyed successfully\";\n  var textBuy = \"you selled successfully\";\n  var dispatch = useDispatch();\n  var currencyDetails = useSelector(function (state) {\n    return state.currencyDetails;\n  });\n  var currency = currencyDetails.currency;\n  var userWallet = useSelector(function (state) {\n    return state.userWallet;\n  });\n  var wallet = userWallet.wallet;\n  var userLogged = useSelector(function (state) {\n    return state.userLogin;\n  });\n  userLogged && console.log(userLogged.userInfo.email);\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var result = [];\n  var dates = [];\n  var prices = [];\n  var nowHour = new Date().getHours();\n\n  for (var i = nowHour; i <= 24; i++) {\n    if (i > 12) {\n      result.push(i + \"PM\");\n    } else {\n      result.push(i + \"AM\");\n    }\n  }\n\n  var decimals = function decimals(num) {\n    var number = parseFloat(num).toFixed(2);\n    return number;\n  };\n\n  function msToTime(duration) {\n    var hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n    hours = hours < 10 ? \"0\" + hours : hours;\n    return hours;\n  }\n\n  var sell = function sell() {\n    setSell(!sel);\n    buy && setBuy(!buy);\n  };\n\n  var buySection = function buySection() {\n    setBuy(!buy);\n    sel && setSell(!sel);\n  };\n\n  currency && currency.map(function (dataC) {\n    var time = msToTime(dataC.time);\n    dates.push(time);\n    prices.push(parseInt(dataC.priceUsd));\n  });\n\n  var calculValue = function calculValue(soldeBuy, price) {\n    return soldeBuy * 1 / price;\n  };\n\n  var calculPrice = function calculPrice(soldeSell, price) {\n    return soldeSell * price;\n  };\n\n  useEffect(function () {\n    dispatch(currencyDetail(id));\n\n    if (user) {\n      setUserInfo(user.userInfo);\n      setLocalCrncy(user.userInfo.localCrncy);\n      setSolde(user.userInfo.solde);\n      dispatch(currencyDetailsByUserId(userInfo.id));\n    }\n  }, [dispatch, userInfo, user, solde, localCrncy]);\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      padding: 20,\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, id.toUpperCase()), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      padding: 20,\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"$\", price)), userInfo && React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      backgroundColor: \"#003f5c\",\n      height: 50,\n      width: \"95%\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      padding: 20,\n      borderRadius: 36\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Solde : \", decimals(solde)), React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Currency : \", localCrncy), wallet && wallet.value > 0 && React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Value of \", wallet && wallet.cryp_name, \" : \", wallet && wallet.value)), currency !== null ? React.createElement(LineChart, {\n    data: {\n      labels: dates && dates,\n      datasets: [{\n        data: prices && prices\n      }]\n    },\n    width: Dimensions.get(\"window\").width - 35,\n    height: 300,\n    yAxisLabel: \"$\",\n    yAxisSuffix: \"k\",\n    yAxisInterval: 1,\n    chartConfig: {\n      backgroundColor: \"#e26a00\",\n      backgroundGradientFrom: \"#003f5c\",\n      backgroundGradientTo: \"#003f5c\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \".5\",\n        stroke: \"#ffa726\"\n      }\n    },\n    bezier: true,\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"no data here\"), wallet && wallet.value > 0 && solde > 0 && wallet.cryp_name === id && React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: function onPress() {\n      return buySection();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"SELL\")), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: function onPress() {\n      return sell();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"BUY\")), buy && wallet && wallet.value > 0 && React.createElement(View, {\n    style: (styles.sellesView, {\n      marginTop: 24\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"Choose Your Solde\"), React.createElement(Slider, {\n    style: {\n      width: 200,\n      height: 40\n    },\n    minimumValue: 0,\n    maximumValue: wallet && wallet.value,\n    minimumTrackTintColor: \"#FFFFFF\",\n    maximumTrackTintColor: \"#000000\",\n    onValueChange: function onValueChange(soldeSell) {\n      setSoldeSell(soldeSell);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), wallet && wallet.value > 0 && wallet.cryp_name === id && React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, \"Currency value : \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, soldeSell)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, \"price : \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }, \"$\", calculPrice(soldeSell, decimals(price)))), React.createElement(TouchableOpacity, {\n    style: styles.sellesButton,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(dispatch(currencySell(userInfo.id, id, soldeSell, calculPrice(soldeSell, decimals(price)))));\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(dispatch(currencyDetailsByUserId(userInfo.id)));\n\n            case 4:\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(dispatch(sendMail(userInfo.email, subject, textSell, id, calculPrice(soldeSell, decimals(price)), soldeSell)));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }, \"SELL\")))), sel && React.createElement(View, {\n    style: styles.sellesView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, \"Choose Your Solde\"), React.createElement(Slider, {\n    style: {\n      width: \"80%\",\n      height: 40\n    },\n    minimumValue: 0,\n    maximumValue: solde && solde,\n    minimumTrackTintColor: \"#FFFFFF\",\n    maximumTrackTintColor: \"#000000\",\n    onValueChange: function onValueChange(soldeBuy) {\n      setSoldeBuy(soldeBuy);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }), soldeBuy !== 0 && React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, \"Currency value : \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, calculValue(decimals(soldeBuy), price))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }, \"Solde : \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, decimals(soldeBuy))), React.createElement(TouchableOpacity, {\n    style: styles.sellesButton,\n    onPress: function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(dispatch(currencyRegister(userInfo.id, id, calculValue(decimals(soldeBuy), price), soldeBuy)));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(dispatch(currencyDetailsByUserId(userInfo.id)));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 19\n    }\n  }, \"BUY\"))))));\n};\n\nvar styles = StyleSheet.create({\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#003f5c\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  sellesView: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  sellesButton: {\n    width: \"60%\",\n    backgroundColor: \"#003f5c\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  }\n});\nexport default SingleCurrency;","map":{"version":3,"sources":["D:/react native/Crypto/crypto_currency/components/SingleCurrency.js"],"names":["React","useEffect","useState","LineChart","useDispatch","useSelector","currencyDetail","currencyDetailsByUserId","currencyRegister","currencySell","sendMail","Slider","SingleCurrency","props","route","params","id","price","sel","setSell","buy","setBuy","userInfo","setUserInfo","solde","setSolde","soldeSell","setSoldeSell","soldeBuy","setSoldeBuy","localCrncy","setLocalCrncy","subject","textSell","textBuy","dispatch","currencyDetails","state","currency","userWallet","wallet","userLogged","userLogin","console","log","email","user","result","dates","prices","nowHour","Date","getHours","i","push","decimals","num","number","parseFloat","toFixed","msToTime","duration","hours","Math","floor","sell","buySection","map","dataC","time","parseInt","priceUsd","calculValue","calculPrice","alignItems","flexDirection","fontSize","padding","color","toUpperCase","backgroundColor","height","width","justifyContent","borderRadius","value","cryp_name","labels","datasets","data","Dimensions","get","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","style","propsForDots","r","strokeWidth","stroke","marginVertical","styles","loginBtn","sellesView","marginTop","sellesButton","StyleSheet","create","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Dimensions,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Button,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { LineChart } from \"react-native-chart-kit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  currencyDetail,\r\n  currencyDetailsByUserId,\r\n  currencyRegister,\r\n  currencySell,\r\n  sendMail,\r\n} from \"../actions/currencyActions\";\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\nconst SingleCurrency = (props) => {\r\n  const { id, price } = props.route.params;\r\n  const [sel, setSell] = useState(false);\r\n  const [buy, setBuy] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const [solde, setSolde] = useState(0);\r\n  const [soldeSell, setSoldeSell] = useState(0);\r\n  const [soldeBuy, setSoldeBuy] = useState(0);\r\n  const [localCrncy, setLocalCrncy] = useState(\"\");\r\n  let subject = \"Payement passed sucessfully\";\r\n  let textSell = \"you buyed successfully\";\r\n  let textBuy = \"you selled successfully\";\r\n\r\n  const dispatch = useDispatch();\r\n  const currencyDetails = useSelector((state) => state.currencyDetails);\r\n  const { currency } = currencyDetails;\r\n\r\n  const userWallet = useSelector((state) => state.userWallet);\r\n  const { wallet } = userWallet;\r\n\r\n  const userLogged = useSelector((state) => state.userLogin);\r\n  userLogged && console.log(userLogged.userInfo.email);\r\n  const user = useSelector((state) => state.user);\r\n  var result = [];\r\n  let dates = [];\r\n  let prices = [];\r\n  var nowHour = new Date().getHours();\r\n\r\n  for (var i = nowHour; i <= 24; i++) {\r\n    if (i > 12) {\r\n      result.push(i + \"PM\");\r\n    } else {\r\n      result.push(i + \"AM\");\r\n    }\r\n  }\r\n\r\n  const decimals = (num) => {\r\n    let number = parseFloat(num).toFixed(2);\r\n    return number;\r\n  };\r\n\r\n  function msToTime(duration) {\r\n    var hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n    hours = hours < 10 ? \"0\" + hours : hours;\r\n    return hours;\r\n  }\r\n\r\n  const sell = () => {\r\n    setSell(!sel);\r\n    buy && setBuy(!buy);\r\n  };\r\n  const buySection = () => {\r\n    setBuy(!buy);\r\n    sel && setSell(!sel);\r\n  };\r\n  currency &&\r\n    currency.map((dataC) => {\r\n      const time = msToTime(dataC.time);\r\n      dates.push(time);\r\n      prices.push(parseInt(dataC.priceUsd));\r\n    });\r\n\r\n  const calculValue = (soldeBuy, price) => {\r\n    return (soldeBuy * 1) / price;\r\n  };\r\n  const calculPrice = (soldeSell, price) => {\r\n    return soldeSell * price;\r\n  };\r\n  useEffect(() => {\r\n    dispatch(currencyDetail(id));\r\n    if (user) {\r\n      setUserInfo(user.userInfo);\r\n      setLocalCrncy(user.userInfo.localCrncy);\r\n      setSolde(user.userInfo.solde);\r\n      dispatch(currencyDetailsByUserId(userInfo.id));\r\n    }\r\n  }, [dispatch, userInfo, user, solde, localCrncy]);\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={{ alignItems: \"center\" }}>\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <Text style={{ fontSize: 20, padding: 20, color: \"black\" }}>\r\n            {id.toUpperCase()}\r\n          </Text>\r\n          <Text style={{ fontSize: 18, padding: 20, color: \"black\" }}>\r\n            ${price}\r\n          </Text>\r\n        </View>\r\n\r\n        {userInfo && (\r\n          <View\r\n            style={{\r\n              alignItems: \"center\",\r\n              backgroundColor: \"#003f5c\",\r\n              height: 50,\r\n              width: \"95%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              padding: 20,\r\n              borderRadius: 36,\r\n            }}\r\n          >\r\n            <Text style={{ color: \"white\" }}>Solde : {decimals(solde)}</Text>\r\n            <Text style={{ color: \"white\" }}>Currency : {localCrncy}</Text>\r\n            {wallet && wallet.value > 0 && (\r\n              <Text style={{ color: \"white\" }}>\r\n                Value of {wallet && wallet.cryp_name} : {wallet && wallet.value}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        )}\r\n\r\n        {currency !== null ? (\r\n          <LineChart\r\n            data={{\r\n              labels: dates && dates,\r\n              datasets: [\r\n                {\r\n                  data: prices && prices,\r\n                },\r\n              ],\r\n            }}\r\n            width={Dimensions.get(\"window\").width - 35} // from react-native\r\n            height={300}\r\n            yAxisLabel=\"$\"\r\n            yAxisSuffix=\"k\"\r\n            yAxisInterval={1} // optional, defaults to 1\r\n            chartConfig={{\r\n              backgroundColor: \"#e26a00\",\r\n              backgroundGradientFrom: \"#003f5c\",\r\n              backgroundGradientTo: \"#003f5c\",\r\n              decimalPlaces: 2, // optional, defaults to 2dp\r\n              color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n              labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n              style: {\r\n                borderRadius: 16,\r\n              },\r\n              propsForDots: {\r\n                r: \"6\",\r\n                strokeWidth: \".5\",\r\n                stroke: \"#ffa726\",\r\n              },\r\n            }}\r\n            bezier\r\n            style={{\r\n              marginVertical: 8,\r\n              borderRadius: 16,\r\n            }}\r\n          />\r\n        ) : (\r\n          <Text>no data here</Text>\r\n        )}\r\n\r\n        {wallet && wallet.value > 0 && solde > 0 && wallet.cryp_name === id && (\r\n          <TouchableOpacity\r\n            style={styles.loginBtn}\r\n            onPress={() => buySection()}\r\n          >\r\n            <Text style={{ color: \"white\" }}>SELL</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        <TouchableOpacity style={styles.loginBtn} onPress={() => sell()}>\r\n          <Text style={{ color: \"white\" }}>BUY</Text>\r\n        </TouchableOpacity>\r\n\r\n        {buy && wallet && wallet.value > 0 && (\r\n          <View style={(styles.sellesView, { marginTop: 24 })}>\r\n            <Text>Choose Your Solde</Text>\r\n            <Slider\r\n              style={{ width: 200, height: 40 }}\r\n              minimumValue={0}\r\n              maximumValue={wallet && wallet.value}\r\n              minimumTrackTintColor=\"#FFFFFF\"\r\n              maximumTrackTintColor=\"#000000\"\r\n              onValueChange={(soldeSell) => {\r\n                setSoldeSell(soldeSell);\r\n              }}\r\n            />\r\n            {wallet && wallet.value > 0 && wallet.cryp_name === id && (\r\n              <>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-around\",\r\n                  }}\r\n                >\r\n                  <Text>Currency value : </Text>\r\n                  <Text>{soldeSell}</Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-around\",\r\n                  }}\r\n                >\r\n                  <Text>price : </Text>\r\n                  <Text>${calculPrice(soldeSell, decimals(price))}</Text>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  style={styles.sellesButton}\r\n                  onPress={async () => {\r\n                    await dispatch(\r\n                      currencySell(\r\n                        userInfo.id,\r\n                        id,\r\n                        soldeSell,\r\n                        calculPrice(soldeSell, decimals(price))\r\n                      )\r\n                    );\r\n                    await dispatch(currencyDetailsByUserId(userInfo.id));\r\n\r\n                    await dispatch(\r\n                      sendMail(\r\n                        userInfo.email,\r\n                        subject,\r\n                        textSell,\r\n                        id,\r\n                        calculPrice(soldeSell, decimals(price)),\r\n                        soldeSell\r\n                      )\r\n                    );\r\n                  }}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>SELL</Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            )}\r\n          </View>\r\n        )}\r\n\r\n        {sel && (\r\n          <View style={styles.sellesView}>\r\n            <Text>Choose Your Solde</Text>\r\n            <Slider\r\n              style={{ width: \"80%\", height: 40 }}\r\n              minimumValue={0}\r\n              maximumValue={solde && solde}\r\n              minimumTrackTintColor=\"#FFFFFF\"\r\n              maximumTrackTintColor=\"#000000\"\r\n              onValueChange={(soldeBuy) => {\r\n                setSoldeBuy(soldeBuy);\r\n              }}\r\n            />\r\n            {soldeBuy !== 0 && (\r\n              <>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-around\",\r\n                  }}\r\n                >\r\n                  <Text>Currency value : </Text>\r\n                  <Text>{calculValue(decimals(soldeBuy), price)}</Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-around\",\r\n                  }}\r\n                >\r\n                  <Text>Solde : </Text>\r\n                  <Text>{decimals(soldeBuy)}</Text>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  style={styles.sellesButton}\r\n                  onPress={async () => {\r\n                    await dispatch(\r\n                      currencyRegister(\r\n                        userInfo.id,\r\n                        id,\r\n                        calculValue(decimals(soldeBuy), price),\r\n                        soldeBuy\r\n                      )\r\n                    );\r\n                    await dispatch(currencyDetailsByUserId(userInfo.id));\r\n                  }}\r\n                >\r\n                  <Text style={{ color: \"white\" }}>BUY</Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            )}\r\n          </View>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#003f5c\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    marginBottom: 10,\r\n  },\r\n  sellesView: {\r\n    width: \"60%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  sellesButton: {\r\n    width: \"60%\",\r\n    backgroundColor: \"#003f5c\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    marginBottom: 10,\r\n  },\r\n});\r\nexport default SingleCurrency;\r\n"]},"metadata":{},"sourceType":"module"}