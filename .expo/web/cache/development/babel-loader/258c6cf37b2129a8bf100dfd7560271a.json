{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { ADD_USER_FAIL, ADD_USER_REQUEST, ADD_USER_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/constants\";\nimport firebase from \"../configs/firebase\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nexport var register = function register(email, password) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch({\n              type: USER_REGISTER_REQUEST\n            });\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password).then(function _callee(data) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(dispatch({\n                        type: USER_REGISTER_SUCCESS,\n                        payload: data.user\n                      }));\n\n                    case 2:\n                      AsyncStorage.setItem(\"userInfo\", JSON.stringify(data.user.uid));\n                      _context.next = 5;\n                      return _regeneratorRuntime.awrap(dispatch(addUser(data.user.uid)));\n\n                    case 5:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 4:\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: USER_REGISTER_FAIL,\n              payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n};\nexport var login = function login(email, password) {\n  return function _callee4(dispatch) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            dispatch({\n              type: USER_LOGIN_REQUEST\n            });\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password).then(function _callee3(data) {\n              return _regeneratorRuntime.async(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return _regeneratorRuntime.awrap(dispatch({\n                        type: USER_LOGIN_SUCCESS,\n                        payload: data.user\n                      }));\n\n                    case 2:\n                      console.log(data.user.uid);\n\n                    case 3:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 4:\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            dispatch({\n              type: USER_LOGIN_FAIL,\n              payload: _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message\n            });\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n};\nexport var addUser = function addUser(f_uid) {\n  return function _callee5(dispatch) {\n    var config, _await$axios$post, data;\n\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            dispatch({\n              type: ADD_USER_REQUEST\n            });\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:3000/user/add/\" + f_uid, config));\n\n          case 5:\n            _await$axios$post = _context5.sent;\n            data = _await$axios$post.data;\n            dispatch({\n              type: ADD_USER_SUCCESS,\n              payload: data\n            });\n            _context5.next = 13;\n            break;\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](0);\n            dispatch({\n              type: ADD_USER_FAIL,\n              payload: _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};\nexport var fUser = function fUser(f_uid) {\n  return function _callee6(dispatch) {\n    var config, _await$axios$get, data;\n\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            dispatch({\n              type: USER_DETAILS_REQUEST\n            });\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            _context6.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3000/user/\" + f_uid, config));\n\n          case 5:\n            _await$axios$get = _context6.sent;\n            data = _await$axios$get.data;\n            dispatch({\n              type: USER_DETAILS_SUCCESS,\n              payload: data\n            });\n            console.log(data);\n            AsyncStorage.setItem(\"userInfo\", JSON.stringify(data));\n            _context6.next = 15;\n            break;\n\n          case 12:\n            _context6.prev = 12;\n            _context6.t0 = _context6[\"catch\"](0);\n            dispatch({\n              type: USER_DETAILS_FAIL,\n              payload: _context6.t0.response && _context6.t0.response.data.message ? _context6.t0.response.data.message : _context6.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n};","map":{"version":3,"sources":["D:/react native/Crypto/crypto_currency/actions/userActions.js"],"names":["ADD_USER_FAIL","ADD_USER_REQUEST","ADD_USER_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","firebase","AsyncStorage","axios","register","email","password","dispatch","type","auth","createUserWithEmailAndPassword","then","data","payload","user","setItem","JSON","stringify","uid","addUser","response","message","login","signInWithEmailAndPassword","console","log","f_uid","config","headers","post","fUser","get"],"mappings":"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","sourcesContent":["import {\r\n  ADD_USER_FAIL,\r\n  ADD_USER_REQUEST,\r\n  ADD_USER_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from \"../constants/constants\";\r\nimport firebase from \"../configs/firebase\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport axios from \"axios\";\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async (data) => {\r\n        await dispatch({\r\n          type: USER_REGISTER_SUCCESS,\r\n          payload: data.user,\r\n        });\r\n        AsyncStorage.setItem(\"userInfo\", JSON.stringify(data.user.uid));\r\n        await dispatch(addUser(data.user.uid));\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(async (data) => {\r\n        await dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: data.user,\r\n        });\r\n        console.log(data.user.uid);\r\n        // await dispatch(fUser(data.user.uid));\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addUser = (f_uid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ADD_USER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"http://localhost:3000/user/add/\" + f_uid,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_USER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fUser = (f_uid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\r\n      \"http://localhost:3000/user/\" + f_uid,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(data);\r\n    AsyncStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}